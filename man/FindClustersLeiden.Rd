% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FindClustersLeiden.R
\name{FindClustersLeiden}
\alias{FindClustersLeiden}
\title{Calculate Leiden clustering for a Graph object in Seurat}
\usage{
FindClustersLeiden(
  object,
  graph.name = NULL,
  resolution = c(0.8),
  min.cluster.size = 5,
  n_iterations = 2,
  pythondir = "~/miniconda3/bin/python",
  partition_type = "RBConfigurationVertexPartition"
)
}
\arguments{
\item{object}{Seurat object}

\item{graph.name}{Name of Graph slot in object to use for Leiden clustering}

\item{resolution}{Vector of resolution to input into Leiden}

\item{min.cluster.size}{Minimum cluster size trimmed after clustering}

\item{pythondir}{Specified director for python binary that has the leidenalg
library installed}

\item{partition_type}{The partition_type to specify for Leiden.}

\item{n.iterations}{Number of iterations to run Leiden clustering for}
}
\value{
Returns a Seurat object with the leiden clusterings stored as
object@meta.data columns
}
\description{
Calculate Leiden clustering for a Graph object in Seurat
}
\details{
code is adapted from @immunogenomics/singlecellmethods with some
tweaks and flexibility added to match the arguments allowed by the
leidenalg package. In essence, we are using reticulate to run
leidenalg.find_partition(graph.name, partition_type) as specified here
https://leidenalg.readthedocs.io/en/stable/intro.html. Arguments are input
into the find_partition function here:
https://leidenalg.readthedocs.io/en/stable/reference.html#leidenalg.find_partition.
Singletons will be excluded for now, but ideally can be grouped in a step
afterwards...
}
\references{
code is adapted from @immunogenomics/singlecellmethods
}
